{"version":3,"sources":["components/SVG/Svg.js","components/SVG/Tmdb.js","images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyle.js","App.js","index.js"],"names":["Svg","width","height","viewBox","fill","xmlns","id","mask-type","maskUnits","x","y","d","mask","Tmdb","data-name","class","points","transform","Wrapper","styled","div","Content","LogoImg","Header","to","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","variable","Grid","header","children","Image","img","Thumb","movieId","clickable","src","alt","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","value","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","console","log","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","creadit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","credit_id","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a67f532.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Svg = () => {\n  return (\n    <svg\n      width=\"334\"\n      height=\"52\"\n      viewBox=\"0 0 334 52\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <mask\n        id=\"mask0\"\n        mask-type=\"alpha\"\n        maskUnits=\"userSpaceOnUse\"\n        x=\"0\"\n        y=\"3\"\n        width=\"50\"\n        height=\"45\"\n      >\n        <path\n          d=\"M47.0305 3H46.2595V5.34375C46.2595 6.11719 45.7391 6.75 45.103 6.75H41.2481C40.612 6.75 40.0916 6.11719 40.0916 5.34375V3H9.2519V5.34375C9.2519 6.11719 8.73149 6.75 8.09542 6.75H4.24046C3.60439 6.75 3.08397 6.11719 3.08397 5.34375V3H2.31298C1.0312 3 0 4.25391 0 5.8125V45.1875C0 46.7461 1.0312 48 2.31298 48H3.08397V45.6562C3.08397 44.8828 3.60439 44.25 4.24046 44.25H8.09542C8.73149 44.25 9.2519 44.8828 9.2519 45.6562V48H40.0916V45.6562C40.0916 44.8828 40.612 44.25 41.2481 44.25H45.103C45.7391 44.25 46.2595 44.8828 46.2595 45.6562V48H47.0305C48.3123 48 49.3435 46.7461 49.3435 45.1875V5.8125C49.3435 4.25391 48.3123 3 47.0305 3ZM9.2519 39.0937C9.2519 39.8672 8.73149 40.5 8.09542 40.5H4.24046C3.60439 40.5 3.08397 39.8672 3.08397 39.0937V34.4063C3.08397 33.6328 3.60439 33 4.24046 33H8.09542C8.73149 33 9.2519 33.6328 9.2519 34.4063V39.0937ZM9.2519 27.8437C9.2519 28.6172 8.73149 29.25 8.09542 29.25H4.24046C3.60439 29.25 3.08397 28.6172 3.08397 27.8437V23.1562C3.08397 22.3828 3.60439 21.75 4.24046 21.75H8.09542C8.73149 21.75 9.2519 22.3828 9.2519 23.1562V27.8437ZM9.2519 16.5938C9.2519 17.3672 8.73149 18 8.09542 18H4.24046C3.60439 18 3.08397 17.3672 3.08397 16.5938V11.9063C3.08397 11.1328 3.60439 10.5 4.24046 10.5H8.09542C8.73149 10.5 9.2519 11.1328 9.2519 11.9063V16.5938ZM35.4656 40.9687C35.4656 41.7422 34.9452 42.375 34.3091 42.375H15.0343C14.3983 42.375 13.8779 41.7422 13.8779 40.9687V29.7187C13.8779 28.9453 14.3983 28.3125 15.0343 28.3125H34.3091C34.9452 28.3125 35.4656 28.9453 35.4656 29.7187V40.9687ZM35.4656 21.2812C35.4656 22.0547 34.9452 22.6875 34.3091 22.6875H15.0343C14.3983 22.6875 13.8779 22.0547 13.8779 21.2812V10.0312C13.8779 9.25781 14.3983 8.625 15.0343 8.625H34.3091C34.9452 8.625 35.4656 9.25781 35.4656 10.0312V21.2812ZM46.2595 39.0937C46.2595 39.8672 45.7391 40.5 45.103 40.5H41.2481C40.612 40.5 40.0916 39.8672 40.0916 39.0937V34.4063C40.0916 33.6328 40.612 33 41.2481 33H45.103C45.7391 33 46.2595 33.6328 46.2595 34.4063V39.0937ZM46.2595 27.8437C46.2595 28.6172 45.7391 29.25 45.103 29.25H41.2481C40.612 29.25 40.0916 28.6172 40.0916 27.8437V23.1562C40.0916 22.3828 40.612 21.75 41.2481 21.75H45.103C45.7391 21.75 46.2595 22.3828 46.2595 23.1562V27.8437ZM46.2595 16.5938C46.2595 17.3672 45.7391 18 45.103 18H41.2481C40.612 18 40.0916 17.3672 40.0916 16.5938V11.9063C40.0916 11.1328 40.612 10.5 41.2481 10.5H45.103C45.7391 10.5 46.2595 11.1328 46.2595 11.9063V16.5938Z\"\n          fill=\"white\"\n        />\n      </mask>\n      <g mask=\"url(#mask0)\">\n        <path\n          d=\"M47.0305 3H46.2595V5.34375C46.2595 6.11719 45.7391 6.75 45.103 6.75H41.2481C40.612 6.75 40.0916 6.11719 40.0916 5.34375V3H9.2519V5.34375C9.2519 6.11719 8.73149 6.75 8.09542 6.75H4.24046C3.60439 6.75 3.08397 6.11719 3.08397 5.34375V3H2.31298C1.0312 3 0 4.25391 0 5.8125V45.1875C0 46.7461 1.0312 48 2.31298 48H3.08397V45.6562C3.08397 44.8828 3.60439 44.25 4.24046 44.25H8.09542C8.73149 44.25 9.2519 44.8828 9.2519 45.6562V48H40.0916V45.6562C40.0916 44.8828 40.612 44.25 41.2481 44.25H45.103C45.7391 44.25 46.2595 44.8828 46.2595 45.6562V48H47.0305C48.3123 48 49.3435 46.7461 49.3435 45.1875V5.8125C49.3435 4.25391 48.3123 3 47.0305 3ZM9.2519 39.0937C9.2519 39.8672 8.73149 40.5 8.09542 40.5H4.24046C3.60439 40.5 3.08397 39.8672 3.08397 39.0937V34.4063C3.08397 33.6328 3.60439 33 4.24046 33H8.09542C8.73149 33 9.2519 33.6328 9.2519 34.4063V39.0937ZM9.2519 27.8437C9.2519 28.6172 8.73149 29.25 8.09542 29.25H4.24046C3.60439 29.25 3.08397 28.6172 3.08397 27.8437V23.1562C3.08397 22.3828 3.60439 21.75 4.24046 21.75H8.09542C8.73149 21.75 9.2519 22.3828 9.2519 23.1562V27.8437ZM9.2519 16.5938C9.2519 17.3672 8.73149 18 8.09542 18H4.24046C3.60439 18 3.08397 17.3672 3.08397 16.5938V11.9063C3.08397 11.1328 3.60439 10.5 4.24046 10.5H8.09542C8.73149 10.5 9.2519 11.1328 9.2519 11.9063V16.5938ZM35.4656 40.9687C35.4656 41.7422 34.9452 42.375 34.3091 42.375H15.0343C14.3983 42.375 13.8779 41.7422 13.8779 40.9687V29.7187C13.8779 28.9453 14.3983 28.3125 15.0343 28.3125H34.3091C34.9452 28.3125 35.4656 28.9453 35.4656 29.7187V40.9687ZM35.4656 21.2812C35.4656 22.0547 34.9452 22.6875 34.3091 22.6875H15.0343C14.3983 22.6875 13.8779 22.0547 13.8779 21.2812V10.0312C13.8779 9.25781 14.3983 8.625 15.0343 8.625H34.3091C34.9452 8.625 35.4656 9.25781 35.4656 10.0312V21.2812ZM46.2595 39.0937C46.2595 39.8672 45.7391 40.5 45.103 40.5H41.2481C40.612 40.5 40.0916 39.8672 40.0916 39.0937V34.4063C40.0916 33.6328 40.612 33 41.2481 33H45.103C45.7391 33 46.2595 33.6328 46.2595 34.4063V39.0937ZM46.2595 27.8437C46.2595 28.6172 45.7391 29.25 45.103 29.25H41.2481C40.612 29.25 40.0916 28.6172 40.0916 27.8437V23.1562C40.0916 22.3828 40.612 21.75 41.2481 21.75H45.103C45.7391 21.75 46.2595 22.3828 46.2595 23.1562V27.8437ZM46.2595 16.5938C46.2595 17.3672 45.7391 18 45.103 18H41.2481C40.612 18 40.0916 17.3672 40.0916 16.5938V11.9063C40.0916 11.1328 40.612 10.5 41.2481 10.5H45.103C45.7391 10.5 46.2595 11.1328 46.2595 11.9063V16.5938Z\"\n          fill=\"white\"\n        />\n      </g>\n      <path\n        d=\"M242.997 33.9648L243.241 35.1244C243.241 35.6127 242.987 36.1925 242.478 36.8639C241.134 38.6135 238.976 40.6275 236.003 42.9061C233.051 45.1643 230.872 46.2934 229.467 46.2934C228.062 46.2934 226.963 45.8865 226.169 45.0728C225.375 44.2387 224.978 43.2926 224.978 42.2347C224.978 40.9734 226.301 38.1862 228.948 33.8732C232.918 27.4648 237.988 19.9781 244.157 11.4131C242.854 12.7559 239.393 16.3772 233.773 22.277C221.333 35.2973 214.064 42.6721 211.967 44.4014C211.621 44.6862 211.112 44.8286 210.44 44.8286C209.788 44.8286 209.096 44.5642 208.363 44.0352C207.63 43.4859 207.264 42.8756 207.264 42.2042V42.0516C207.345 41.1972 209.31 37.0164 213.158 29.5094C217.006 22.0023 220.233 16.0313 222.84 11.5962C218.991 15.8279 215.103 20.5477 211.173 25.7559C203.701 35.6432 198.234 44.0657 194.772 51.0235C194.467 51.6745 194.09 52 193.642 52C193.194 52 192.543 51.8881 191.688 51.6643C189.896 51.1761 189 50.3216 189 49.1009C189 48.3685 190.497 45.7543 193.49 41.2582C196.483 36.7418 199.954 31.8185 203.904 26.4883C207.854 21.1377 211.947 15.9906 216.182 11.0469C222.025 4.21127 225.782 0.793427 227.451 0.793427C227.716 0.793427 227.971 0.864632 228.215 1.00704C228.459 1.12911 228.612 1.19014 228.673 1.19014C228.734 1.19014 228.795 1.15962 228.856 1.09859C229.121 0.773083 229.64 0.610329 230.414 0.610329C231.208 0.610329 231.972 0.762911 232.705 1.06808C233.458 1.37324 233.835 1.71909 233.835 2.10563C233.835 2.34977 232.816 4.29264 230.78 7.93427C223.96 20.0188 219.378 28.3192 217.037 32.8357C219.277 30.1299 222.473 26.5391 226.627 22.0634C230.801 17.5876 235.178 13.1221 239.76 8.66667C245.725 2.88889 249.288 0 250.449 0C250.917 0 251.508 0.101721 252.22 0.305164C253.483 0.671362 254.694 0.85446 255.855 0.85446C256.181 0.915493 256.455 1.0579 256.679 1.28169C256.924 1.48513 257.046 1.69875 257.046 1.92254C257.046 2.14632 256.985 2.32942 256.863 2.47183C250.245 11.2606 244.666 19.0117 240.126 25.7254C235.586 32.439 232.786 36.9757 231.727 39.3357C233.865 38.8881 237.052 36.3349 241.287 31.6761C241.47 31.4319 241.602 31.2692 241.684 31.1878C241.765 31.1064 241.836 31.025 241.897 30.9437C242.244 30.5368 242.508 30.7911 242.691 31.7066C242.773 32.2355 242.824 32.6119 242.844 32.8357C242.885 33.0391 242.915 33.2629 242.936 33.507C242.977 33.7308 242.997 33.8834 242.997 33.9648Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M267.824 21.9718C268.435 21.9718 269.056 22.2465 269.687 22.7958C270.339 23.3451 270.665 24.1894 270.665 25.3286C270.665 26.4476 270.268 27.9124 269.474 29.723C268.68 31.5133 267.59 33.3443 266.206 35.216C264.821 37.0673 263.294 38.8169 261.625 40.4648C259.975 42.0923 258.184 43.4351 256.249 44.493C254.335 45.5305 252.595 46.0493 251.027 46.0493C249.459 46.0493 248.197 45.561 247.24 44.5845C246.303 43.5876 245.835 42.2144 245.835 40.4648C245.835 38.6948 246.262 36.7418 247.118 34.6056C247.993 32.4695 249.113 30.5876 250.477 28.9601C251.841 27.3122 253.317 25.8372 254.906 24.5352C258.224 21.8701 261.136 20.5376 263.64 20.5376C264.76 20.5376 265.605 20.8122 266.175 21.3615C266.379 21.5446 266.481 21.7074 266.481 21.8498V22.0329C266.766 21.9922 267.214 21.9718 267.824 21.9718ZM264.74 26.0305H264.526C263.813 26.0305 263.457 25.5117 263.457 24.4742C261.971 24.9624 260.413 25.8169 258.784 27.0376C257.155 28.2582 255.7 29.7027 254.417 31.3709C251.811 34.7074 250.487 37.525 250.447 39.8239C250.447 40.9632 250.864 41.5329 251.699 41.5329C252.533 41.5329 253.776 40.9836 255.425 39.885C257.074 38.7864 258.703 37.2199 260.311 35.1854C261.94 33.151 263.152 31.3912 263.946 29.9061C264.76 28.4006 265.167 27.3834 265.167 26.8545C265.167 26.3052 265.025 26.0305 264.74 26.0305Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M297.966 21.7277C297.966 23.1315 297.182 25.1862 295.615 27.892C294.047 30.5775 292.031 33.3036 289.567 36.0704C287.124 38.8372 284.528 41.2379 281.779 43.2723C279.031 45.2864 276.883 46.2934 275.335 46.2934C274.5 46.2934 273.737 45.9883 273.045 45.3779C272.352 44.7676 272.006 43.8013 272.006 42.4789C272.006 41.1362 272.637 39.0305 273.9 36.162C275.162 33.2934 276.404 30.8725 277.626 28.8991C276.547 29.6925 275.885 30.0892 275.641 30.0892C275.417 30.0892 275.121 29.8247 274.755 29.2958C274.409 28.7668 274.236 28.3599 274.236 28.0751C274.236 27.77 274.287 27.5462 274.388 27.4038C278.399 22.9484 281.23 20.7207 282.879 20.7207C283.571 20.7207 284.151 20.9241 284.62 21.331C285.088 21.7379 285.322 22.2261 285.322 22.7958C285.322 23.3654 284.63 25.0031 283.245 27.7089C281.861 30.4147 280.476 33.151 279.092 35.9178C277.707 38.6643 277.015 40.3936 277.015 41.1056C277.015 41.2277 277.076 41.2887 277.198 41.2887C277.728 41.2887 279.153 40.241 281.474 38.1455C283.815 36.0297 285.709 34.0665 287.155 32.2559C288.6 30.4452 289.863 28.6244 290.942 26.7934C292.041 24.9624 292.591 23.7621 292.591 23.1925C292.591 22.6228 292.469 22.1549 292.224 21.7887C292.001 21.4022 291.889 20.9953 291.889 20.5681C291.889 20.1205 292.184 19.6322 292.774 19.1033C293.385 18.554 294.159 18.2793 295.095 18.2793C297.009 18.2793 297.966 19.4288 297.966 21.7277Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M317.663 11.7183C317.663 12.8779 317.123 14.0477 316.044 15.2277C314.965 16.3873 313.835 16.9671 312.654 16.9671C311.494 16.9671 310.913 16.3568 310.913 15.1362C310.913 13.9155 311.422 12.7559 312.44 11.6573C313.479 10.5383 314.619 9.97887 315.861 9.97887C316.411 9.97887 316.848 10.1315 317.174 10.4366C317.5 10.7418 317.663 11.169 317.663 11.7183ZM312.715 38.3592C312.715 38.9695 312.654 39.4069 312.532 39.6714C311.534 41.7058 309.946 43.3537 307.768 44.615C305.589 45.856 303.695 46.4765 302.087 46.4765C300.478 46.4765 299.094 45.9374 297.933 44.8592C296.773 43.7809 296.192 42.6823 296.192 41.5634C296.192 40.4444 296.752 38.8169 297.872 36.6808C298.992 34.5446 300.112 32.5712 301.232 30.7606C302.352 28.9499 302.911 27.9734 302.911 27.831C302.911 27.6682 302.698 27.3631 302.27 26.9155C301.863 26.4679 301.659 26.1424 301.659 25.939C301.659 25.7152 302.077 25.1557 302.911 24.2606C303.767 23.3451 304.795 22.4499 305.996 21.5751C307.218 20.68 308.144 20.2324 308.775 20.2324C309.427 20.2324 310.007 20.5172 310.516 21.0869C311.025 21.6565 311.28 22.1753 311.28 22.6432C311.28 23.1111 308.857 27.5156 304.011 35.8568C303.95 35.9789 303.777 36.2535 303.492 36.6808C303.227 37.0876 303.013 37.4335 302.85 37.7183C302.708 37.9828 302.535 38.3083 302.331 38.6948C301.924 39.5086 301.72 40.1901 301.72 40.7394C301.72 41.4311 302.189 41.777 303.125 41.777C304.062 41.777 305.029 41.4617 306.027 40.831C307.045 40.18 307.92 39.4679 308.653 38.6948C310.567 36.6401 311.656 35.6127 311.921 35.6127C312.451 35.6127 312.715 36.5282 312.715 38.3592Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M334 22.3991C334 23.7418 333.45 24.9218 332.351 25.939C331.272 26.9562 330.04 27.4648 328.655 27.4648C328.207 27.4648 327.912 27.3631 327.77 27.1596C327.627 26.9358 327.556 26.651 327.556 26.3052C327.556 25.9593 327.597 25.6236 327.678 25.2981C326.945 25.5423 326.131 25.9186 325.235 26.4272C324.339 26.9358 323.239 27.6886 321.936 28.6854C320.633 29.6823 319.982 30.4249 319.982 30.9131C319.982 31.0759 320.216 31.1573 320.684 31.1573C321.173 31.1573 321.916 30.9945 322.914 30.669C323.911 30.3232 324.603 30.1502 324.99 30.1502C325.398 30.1502 325.662 30.1706 325.784 30.2113C326.049 30.3537 326.334 30.669 326.64 31.1573C326.945 31.6252 327.098 32.0016 327.098 32.2864C327.098 32.5509 326.833 32.9069 326.304 33.3545C325.774 33.802 325.174 34.1479 324.502 34.392C323.83 34.6158 323.382 34.7887 323.158 34.9108C318.862 37.3114 316.714 38.9593 316.714 39.8545C316.714 41.4413 318.068 42.2347 320.776 42.2347C322.506 42.2347 324.247 41.6854 325.998 40.5869C327.485 39.651 328.818 38.705 329.999 37.7488C331.2 36.7723 331.954 36.1721 332.259 35.9484C332.585 35.7246 332.829 35.6127 332.992 35.6127C333.522 35.6127 333.786 36.2027 333.786 37.3826C333.786 38.5626 333.715 39.3459 333.572 39.7324C333.43 40.0986 333.023 40.5563 332.351 41.1056C327.994 44.6455 323.87 46.4155 319.982 46.4155C317.905 46.4155 316.245 46.1307 315.003 45.561C312.723 44.5235 311.583 42.9366 311.583 40.8005C311.583 37.993 313.527 35.867 317.416 34.4225C316.642 34.0767 316.144 33.6393 315.92 33.1103C315.696 32.561 315.584 31.6964 315.584 30.5164C315.584 29.3161 316.133 28.0548 317.233 26.7324C318.353 25.3897 319.717 24.2911 321.325 23.4366C324.909 21.5039 328.106 20.5376 330.915 20.5376C331.587 20.5376 332.269 20.7003 332.962 21.0258C333.654 21.3513 334 21.8091 334 22.3991Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M79.3276 42.5048L69.6292 27.3521H65.2162V42.5048H62V7H73.344C74.5574 7 75.6959 7.23109 76.7597 7.69326C77.8234 8.13893 78.7542 8.75791 79.552 9.55021C80.3499 10.3425 80.9732 11.2751 81.4219 12.348C81.8873 13.4044 82.12 14.5351 82.12 15.74V18.6121C82.12 19.8171 81.8873 20.956 81.4219 22.0289C80.9732 23.0853 80.3499 24.0096 79.552 24.8019C78.7542 25.5942 77.8234 26.2215 76.7597 26.6836C75.6959 27.1293 74.5574 27.3521 73.344 27.3521L83.0425 42.5048H79.3276ZM78.9038 15.74C78.9038 14.9477 78.7542 14.2132 78.455 13.5365C78.1558 12.8432 77.7486 12.2407 77.2334 11.729C76.7181 11.2008 76.1114 10.7882 75.4133 10.4911C74.7319 10.1939 73.9922 10.0454 73.1944 10.0454H65.2162V24.3067H73.1944C73.9922 24.3067 74.7319 24.1582 75.4133 23.8611C76.1114 23.564 76.7181 23.1596 77.2334 22.6479C77.7486 22.1197 78.1558 21.5172 78.455 20.8404C78.7542 20.1472 78.9038 19.4044 78.9038 18.6121V15.74Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M107.274 35.5475C107.274 36.5708 107.075 37.5365 106.676 38.4443C106.294 39.3521 105.762 40.1444 105.08 40.8212C104.399 41.4979 103.601 42.0344 102.687 42.4305C101.773 42.8102 100.8 43 99.7698 43H97.7254C96.6949 43 95.7225 42.8102 94.8083 42.4305C93.8942 42.0344 93.0964 41.4979 92.4149 40.8212C91.7334 40.1444 91.1932 39.3521 90.7943 38.4443C90.412 37.5365 90.2209 36.5708 90.2209 35.5475V24.1087C90.2209 23.0853 90.412 22.1197 90.7943 21.2118C91.1932 20.304 91.7334 19.5117 92.4149 18.8349C93.0964 18.1582 93.8942 17.63 94.8083 17.2503C95.7225 16.8542 96.6949 16.6561 97.7254 16.6561H99.7698C100.8 16.6561 101.773 16.8542 102.687 17.2503C103.601 17.63 104.399 18.1582 105.08 18.8349C105.762 19.5117 106.294 20.304 106.676 21.2118C107.075 22.1197 107.274 23.0853 107.274 24.1087V30.0757H93.2875V35.7208C93.2875 36.3315 93.4038 36.9092 93.6365 37.4539C93.8692 37.9821 94.185 38.4443 94.584 38.8404C94.9829 39.2366 95.4483 39.5502 95.9801 39.7813C96.5286 40.0124 97.1104 40.1279 97.7254 40.1279H99.7698C100.385 40.1279 100.958 40.0124 101.49 39.7813C102.039 39.5502 102.512 39.2366 102.911 38.8404C103.31 38.4443 103.626 37.9821 103.859 37.4539C104.091 36.9092 104.208 36.3315 104.208 35.7208V34.0371L107.274 34.5323V35.5475ZM104.208 23.9354C104.208 23.3246 104.091 22.7552 103.859 22.227C103.626 21.6823 103.31 21.2118 102.911 20.8157C102.512 20.4195 102.039 20.1059 101.49 19.8748C100.958 19.6437 100.385 19.5282 99.7698 19.5282H97.7254C97.1104 19.5282 96.5286 19.6437 95.9801 19.8748C95.4483 20.1059 94.9829 20.4195 94.584 20.8157C94.185 21.2118 93.8692 21.6823 93.6365 22.227C93.4038 22.7552 93.2875 23.3246 93.2875 23.9354V27.6988H104.208V23.9354Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M131.481 42.5048L129.786 39.9794C129.088 40.8872 128.215 41.6217 127.168 42.1829C126.121 42.7276 124.974 43 123.727 43H122.954C121.924 43 120.952 42.8102 120.037 42.4305C119.123 42.0344 118.325 41.4979 117.644 40.8212C116.962 40.1444 116.422 39.3521 116.023 38.4443C115.641 37.5365 115.45 36.5708 115.45 35.5475V35.2999C115.45 34.2765 115.641 33.3109 116.023 32.403C116.422 31.4952 116.962 30.7029 117.644 30.0261C118.325 29.3494 119.123 28.8212 120.037 28.4415C120.952 28.0454 121.924 27.8473 122.954 27.8473H129.437V23.9354C129.437 23.3246 129.32 22.7552 129.088 22.227C128.855 21.6823 128.539 21.2118 128.14 20.8157C127.741 20.4195 127.268 20.1059 126.719 19.8748C126.187 19.6437 125.614 19.5282 124.999 19.5282H123.204C122.589 19.5282 122.007 19.6437 121.459 19.8748C120.927 20.1059 120.461 20.4195 120.062 20.8157C119.663 21.2118 119.348 21.6823 119.115 22.227C118.882 22.7552 118.766 23.3246 118.766 23.9354V24.8514L115.699 24.3563V24.1087C115.699 23.0853 115.89 22.1197 116.273 21.2118C116.672 20.304 117.212 19.5117 117.893 18.8349C118.575 18.1582 119.373 17.63 120.287 17.2503C121.201 16.8542 122.173 16.6561 123.204 16.6561H124.999C126.029 16.6561 127.002 16.8542 127.916 17.2503C128.83 17.63 129.628 18.1582 130.309 18.8349C130.991 19.5117 131.523 20.304 131.905 21.2118C132.304 22.1197 132.503 23.0853 132.503 24.1087V42.5048H131.481ZM129.437 30.2242H122.954C122.339 30.2242 121.758 30.3398 121.209 30.5708C120.677 30.8019 120.212 31.1238 119.813 31.5365C119.414 31.9326 119.098 32.403 118.866 32.9477C118.633 33.4759 118.517 34.0454 118.517 34.6561V35.7208C118.517 36.3315 118.633 36.9092 118.866 37.4539C119.098 37.9821 119.414 38.4443 119.813 38.8404C120.212 39.2366 120.677 39.5502 121.209 39.7813C121.758 40.0124 122.339 40.1279 122.954 40.1279H124.999C125.614 40.1279 126.187 40.0124 126.719 39.7813C127.268 39.5502 127.741 39.2366 128.14 38.8404C128.539 38.4443 128.855 37.9821 129.088 37.4539C129.32 36.9092 129.437 36.3315 129.437 35.7208V30.2242Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M157.732 35.5475C157.732 36.5708 157.533 37.5365 157.134 38.4443C156.752 39.3521 156.22 40.1444 155.538 40.8212C154.857 41.4979 154.059 42.0344 153.145 42.4305C152.231 42.8102 151.258 43 150.228 43H148.183C147.153 43 146.181 42.8102 145.266 42.4305C144.352 42.0344 143.554 41.4979 142.873 40.8212C142.192 40.1444 141.651 39.3521 141.252 38.4443C140.87 37.5365 140.679 36.5708 140.679 35.5475V24.1087C140.679 23.0853 140.87 22.1197 141.252 21.2118C141.651 20.304 142.192 19.5117 142.873 18.8349C143.554 18.1582 144.352 17.63 145.266 17.2503C146.181 16.8542 147.153 16.6561 148.183 16.6561H150.228C151.258 16.6561 152.231 16.8542 153.145 17.2503C154.059 17.63 154.857 18.1582 155.538 18.8349C156.22 19.5117 156.752 20.304 157.134 21.2118C157.533 22.1197 157.732 23.0853 157.732 24.1087V25.1238L154.666 25.619V23.9354C154.666 23.3246 154.549 22.7552 154.317 22.227C154.084 21.6823 153.768 21.2118 153.369 20.8157C152.97 20.4195 152.497 20.1059 151.948 19.8748C151.416 19.6437 150.843 19.5282 150.228 19.5282H148.183C147.568 19.5282 146.987 19.6437 146.438 19.8748C145.906 20.1059 145.441 20.4195 145.042 20.8157C144.643 21.2118 144.327 21.6823 144.095 22.227C143.862 22.7552 143.746 23.3246 143.746 23.9354V35.7208C143.746 36.3315 143.862 36.9092 144.095 37.4539C144.327 37.9821 144.643 38.4443 145.042 38.8404C145.441 39.2366 145.906 39.5502 146.438 39.7813C146.987 40.0124 147.568 40.1279 148.183 40.1279H150.228C150.843 40.1279 151.416 40.0124 151.948 39.7813C152.497 39.5502 152.97 39.2366 153.369 38.8404C153.768 38.4443 154.084 37.9821 154.317 37.4539C154.549 36.9092 154.666 36.3315 154.666 35.7208V34.0371L157.732 34.5323V35.5475Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M175.208 42.5048C174.277 42.5048 173.396 42.3315 172.565 41.9849C171.75 41.6382 171.036 41.1596 170.421 40.5488C169.822 39.9381 169.34 39.2283 168.975 38.4195C168.626 37.6107 168.451 36.7442 168.451 35.8198V20.0481H163.864V17.1513H168.451V11.0605L171.518 10.5653V17.1513H178V20.0481H171.518V35.9684C171.518 36.4801 171.609 36.9587 171.792 37.4044C171.991 37.8336 172.257 38.2132 172.59 38.5433C172.922 38.8735 173.313 39.1376 173.762 39.3356C174.21 39.5172 174.692 39.608 175.208 39.608H178V42.5048H175.208Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n\nexport default Svg;\n","import React from \"react\";\n\nconst Tmdb = () => {\n  return (\n    <svg\n      id=\"Layer_1\"\n      data-name=\"Layer 1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 407.34 160.81\"\n    >\n      <defs>\n        <style>{`.cls-1{fill:#fff;}`}</style>\n      </defs>\n      <title>PoweredByRectangle_Green</title>\n      <polygon\n        class=\"cls-1\"\n        points=\"50.38 102.47 57.32 102.47 57.32 74.71 65.96 74.71 65.96 67.82 41.74 67.82 41.74 74.71 50.38 74.71 50.38 102.47\"\n      />\n      <polygon\n        class=\"cls-1\"\n        points=\"88.53 102.47 95.47 102.47 95.47 67.77 88.53 67.77 88.53 81.65 78.14 81.65 78.14 67.77 71.2 67.77 71.2 102.47 78.14 102.47 78.14 88.59 88.53 88.59 88.53 102.47\"\n      />\n      <polygon\n        class=\"cls-1\"\n        points=\"121.25 95.53 108.23 95.53 108.23 88.59 119.35 88.59 119.35 81.65 108.23 81.65 108.23 74.71 120.66 74.71 120.66 67.77 101.28 67.77 101.28 102.47 121.25 102.47 121.25 95.53\"\n      />\n      <polygon\n        class=\"cls-1\"\n        points=\"157.79 82.54 144.1 67.3 141.87 67.3 141.87 102.54 148.9 102.54 148.9 83.17 157.79 92.49 166.67 83.17 166.62 102.54 173.66 102.54 173.66 67.3 171.47 67.3 157.79 82.54\"\n      />\n      <path\n        class=\"cls-1\"\n        d=\"M3309.1,1841.93c-23.88,0-23.88,35.77,0,35.77S3333,1841.93,3309.1,1841.93Zm0,28.59c-13.88,0-13.88-21.45,0-21.45S3323,1870.52,3309.1,1870.52Z\"\n        transform=\"translate(-3111.93 -1774.68)\"\n      />\n      <rect class=\"cls-1\" x=\"254.5\" y=\"67.83\" width=\"6.94\" height=\"34.7\" />\n      <polygon\n        class=\"cls-1\"\n        points=\"274.19 95.6 274.19 88.66 285.32 88.66 285.32 81.72 274.19 81.72 274.19 74.78 286.63 74.78 286.63 67.83 267.25 67.83 267.25 102.54 287.21 102.54 287.21 95.6 274.19 95.6\"\n      />\n      <path\n        class=\"cls-1\"\n        d=\"M3429.48,1842.91h-10.34v34.7h10.34C3452.58,1877.61,3452.58,1842.91,3429.48,1842.91Zm0,27.76h-3.4v-20.82h3.4C3443,1849.85,3443,1870.67,3429.48,1870.67Z\"\n        transform=\"translate(-3111.93 -1774.68)\"\n      />\n      <path\n        class=\"cls-1\"\n        d=\"M3472.7,1860.23c2.18-1.5,3.11-4.22,3.2-6.84,0.15-6.12-3.69-10.53-9.85-10.53h-13.74v34.75H3466a10.32,10.32,0,0,0,10.24-10.44A8.43,8.43,0,0,0,3472.7,1860.23Zm-13.4-10.44h6.17a3.51,3.51,0,0,1,0,7h-6.17v-7Zm6.17,20.87h-6.17v-6.94h6.17a3.41,3.41,0,0,1,3.49,3.45A3.45,3.45,0,0,1,3465.47,1870.67Z\"\n        transform=\"translate(-3111.93 -1774.68)\"\n      />\n      <polygon\n        class=\"cls-1\"\n        points=\"233.13 86.57 224 67.83 215.99 67.83 232.36 103.27 233.91 103.27 250.28 67.83 242.27 67.83 233.13 86.57\"\n      />\n      <path\n        class=\"cls-1\"\n        d=\"M3494.78,1920.93c14.6,0,24.48-9.88,24.48-24.48v-97.28c0-14.6-9.88-24.48-24.48-24.48H3136.41c-14.6,0-24.48,9.88-24.48,24.48V1935.5l12.56-14.56h0V1799.17a11.94,11.94,0,0,1,11.92-11.92h358.37a11.94,11.94,0,0,1,11.92,11.92v97.28a11.94,11.94,0,0,1-11.92,11.92H3155l-12.56,12.56-0.08-.1Z\"\n        transform=\"translate(-3111.93 -1774.68)\"\n      />\n      <path\n        class=\"cls-1\"\n        d=\"M3154.3,1827.53v-15h5.9c5.84,0,5.82,9.26,0,9.26h-2.9v5.73h-3Zm5.65-8.65c2,0,2-3.36,0-3.36h-2.65v3.36h2.65Z\"\n        transform=\"translate(-3111.93 -1774.68)\"\n      />\n      <path\n        class=\"cls-1\"\n        d=\"M3176.07,1812.27c10.33,0,10.33,15.47,0,15.47S3165.74,1812.27,3176.07,1812.27Zm0,3.09c-6,0-6,9.28,0,9.28S3182.08,1815.35,3176.07,1815.35Z\"\n        transform=\"translate(-3111.93 -1774.68)\"\n      />\n      <path\n        class=\"cls-1\"\n        d=\"M3193.12,1827.85l-6.15-15.33h3.38l3,7.66,2.94-7.52h0.15l2.94,7.52,3-7.66h3.38l-6.13,15.26h-0.55l-2.75-6.66-2.73,6.72h-0.52Z\"\n        transform=\"translate(-3111.93 -1774.68)\"\n      />\n      <path\n        class=\"cls-1\"\n        d=\"M3209.53,1827.53v-15H3217v3h-4.51v3h3.95v3h-3.95v3h4.77v3h-7.77Z\"\n        transform=\"translate(-3111.93 -1774.68)\"\n      />\n      <path\n        class=\"cls-1\"\n        d=\"M3229.47,1827.53l-3-5.73H3225v5.73h-3v-15h5.92c5.35,0,5.88,7.54,1.47,8.82l3.49,6.19h-3.4Zm-4.47-8.65h2.65c2,0,2-3.36,0-3.36H3225v3.36Z\"\n        transform=\"translate(-3111.93 -1774.68)\"\n      />\n      <path\n        class=\"cls-1\"\n        d=\"M3236.76,1827.53v-15h7.52v3h-4.51v3h3.95v3h-3.95v3h4.77v3h-7.77Z\"\n        transform=\"translate(-3111.93 -1774.68)\"\n      />\n      <path\n        class=\"cls-1\"\n        d=\"M3253.71,1827.53h-4.47v-15h4.47C3263.7,1812.52,3263.7,1827.53,3253.71,1827.53Zm-1.47-12v9h1.47c5.84,0,5.84-9,0-9h-1.47Z\"\n        transform=\"translate(-3111.93 -1774.68)\"\n      />\n      <path\n        class=\"cls-1\"\n        d=\"M3291.89,1820.77l-5.23-8.25h3.65l3.07,5.17,3.07-5.17h3.67l-5.25,8.25v6.76h-3v-6.76Z\"\n        transform=\"translate(-3111.93 -1774.68)\"\n      />\n      <path\n        class=\"cls-1\"\n        d=\"M3282.58,1820.18a3.68,3.68,0,0,0,1.39-3,4.13,4.13,0,0,0-4.26-4.56h-5.94v15h5.94a4.46,4.46,0,0,0,4.43-4.51A3.65,3.65,0,0,0,3282.58,1820.18Zm-5.79-4.51h2.67a1.52,1.52,0,0,1,0,3h-2.67v-3Zm2.67,9h-2.67v-3h2.67a1.47,1.47,0,0,1,1.51,1.49A1.49,1.49,0,0,1,3279.45,1824.7Z\"\n        transform=\"translate(-3111.93 -1774.68)\"\n      />\n    </svg>\n  );\n};\n\nexport default Tmdb;\n","export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: var(--maxWidth);\n  padding: 20px 0;\n  margin: 0 auto;\n  svg {\n    width: 100px;\n  }\n  @media screen and (max-width: 500px) {\n    width: 80px;\n  }\n`;\n\nexport const LogoImg = styled.div`\n  svg {\n    width: 200px;\n\n    @media screen and (max-width: 500px) {\n      width: 150px;\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Svg from \"../SVG/Svg\";\nimport Tmdb from \"../SVG/Tmdb\";\nimport RMDBLogo from \"../../images/react-movie-logo.svg\";\nimport TMDBLogo from \"../../images/tmdb_logo.svg\";\n\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from \"./Header.styles\";\n\nconst Header = () => (\n  <Wrapper>\n    <Content>\n      <Link to=\"/\">\n        <LogoImg>\n          <Svg />\n        </LogoImg>\n      </Link>\n      <Tmdb />\n    </Content>\n  </Wrapper>\n);\n\nexport default Header;\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    background: linear-gradient(\n        to bottom,\n        rgba(0, 0, 0, 0)41%,\n        rgba(0, 0, 0, 0.65)100%\n    ),\n    url(${({ image}) => image}), var(--darkGrey);\n    background-size: 100%, cover;\n    background-positions: center;\n    height: 600px;\n    position: relative;\n    animation: animateHeroImage 1s;\n\n    @keyframes animateHeroImage {\n        from{\n            opacity: 0;\n        }\n        to{\n            opacity: 1;\n        }\n    }\n\n`;\n\nexport const Content = styled.div`\n    padding: 20px;\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    color: var(--white);\n\n    h1{\n        font-size: var(--fontSUperBig);\n\n        @media screen and (max-width: 720px){\n            font-size: var(--fontBig);\n        }\n    }\n    p{\n        font-size: var(--fontMed);\n        @media screen and (max-width: 720px){\n            font-size: var(--fontSmall);\n        }\n    }\n    @media screen and (max-width: 720px){\n        max-width: 100%;\n    }\n\n\n`;","import React from 'react';\nimport PropTypes from 'prop-types'\n//Styles\n\nimport { Wrapper, Content, Text } from './HeroImage.styles';\n\nconst HeroImage = ({image, title, text, variable}) => (\n    <Wrapper image={image}>\n        <Content>\n            <Text>\n                <h1>{title}</h1>\n                <p>{text}</p>\n            </Text>\n        </Content>\n    </Wrapper>\n);\n\nHeroImage.propTypes = {\n    image: PropTypes.string,\n    title: PropTypes.string,\n    text: PropTypes.string\n}\n\nexport default HeroImage;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n    padding: 0 20px;\n\n    h1{\n        color: var(--medGrey);\n\n        @media screen and (max-width: 768px) {\n            font-size: var(--fontBig);\n        }\n    }\n`;\n\nexport const Content = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 2rem;\n`;","import React from 'react';\nimport PropTypes from 'prop-types'\n//styles \nimport {Wrapper, Content} from './Grid.styles'\n\nconst Grid = ({header, children}) => (\n    <Wrapper>\n        <h1>{header}</h1>\n        <Content>{children}</Content>\n    </Wrapper>\n)\n\nGrid.propTypes = {\n    header: PropTypes.string\n};\n\nexport default Grid;","import styled from \"styled-components\";\n\nexport const Image = styled.img`\n    width: 100%;\n    max-width: 720px;\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n    animation: animateThumb 0.5s;\n\n    :hover {\n        opacity: 0.8;\n    }\n\n    @keyframes animateThumb {\n        from{\n            opacity: 0;\n        }\n        to {\n            opacity: 1;\n        }\n    }\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n//styles \nimport {Image} from './Thumb.styles';\n\nconst Thumb = ({ image, movieId, clickable }) => (\n    <div>\n        {clickable ?(\n            <Link to = {`/${movieId}`}>\n                <Image src={image} alt='movie-thumb' />     \n            </Link>\n        ) : (\n            <Image src={image} alt='movie-thumb' />\n        )}\n    </div>\n);\n\nThumb.propTypes = {\n    image: PropTypes.string,\n    movieId: PropTypes.number,\n    clickable: PropTypes.bool\n};\n\nexport default Thumb;\n\n","import { Spinner } from './Spinner.styles';\n\nexport default Spinner;","import styled from \"styled-components\";\n\nexport const Spinner = styled.div`\n    border: 5px solid var(--lightGrey);\n    border-top: 5px solid var(--medGrey);\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    animation: spin 0.8s linear infinite;\n    margin: 20px auto;\n\n    @keyframes spin{\n        0% { \n            transform: rotate(0deg);\n        }\n        100%{\n            transform: rotate(360deg);\n        }\n    }\n`","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n     display: flex;\n     align-items: center;\n     height: 100px;\n     background: var(--darkGrey);\n     padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n    position: relative;\n    max-width: var(--maxWidth);\n    width: 100%;\n    height: 55px;\n    background: var(--medGrey);\n    margin: 0 auto;\n    border-radius: 40px;\n    color: var(--white);\n\n    img{\n        position: absolute;\n        left: 15px;\n        top: 14px;\n        width: 30px;\n    }\n\n    input{\n        font-size: var(--fontBig);\n        position: absolute;\n        left: 0;\n        margin: 8px 0;\n        padding: 0 0 0 60px;\n        border: 0;\n        width: 95%;\n        background: transparent;\n        height: 40px;\n        color: var(--white);\n        \n        :focus{\n            outline: none;\n        }\n\n    }\n`;\n","import React, {useState, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\n//Image\nimport searchIcon from '../../images/search-icon.svg';\n//styles\nimport { Wrapper, Content} from './SearchBar.styles';\n\nconst SearchBar = ({setSearchTerm}) => {\n    const [state, setState] = useState('');\n    const initial = useRef(true);\n\n    useEffect(() =>{\n        if (initial.current){\n            initial.current = false;\n            return;\n        }\n        const timer = setTimeout(() =>{\n            setSearchTerm(state);\n        },500)\n\n        return () => clearTimeout(timer)\n    },[setSearchTerm, state])\n\n    return(\n        <Wrapper>\n            <Content>\n              <img src={searchIcon} alt='search-icon'/>\n              <input \n              type='text' \n              placeholder='Search Movie'\n              onChange={event => setState(event.currentTarget.value)}\n              value={state}\n              />  \n            </Content>\n        </Wrapper>\n\n    );\n};\n\nSearchBar.propTypes = {\n    callback: PropTypes.func,\n};\n\nexport default SearchBar;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.button`\n    display: block;\n    background: var(--darkGrey);\n    width: 25%;\n    min-width: 200px;\n    height: 60px;\n    border-radius: 30px;\n    color: var(--white);\n    border: 0;\n    font-size: var(--fontBig);\n    margin: 20px auto;\n    transition:  all 0.3s;\n    outline: none;\n    cursor: pointer;\n\n    :hover{\n        opacity:0.8;\n    }\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n//styles\nimport {Wrapper} from './Button.styles';\n\nconst Button = ({text, callback}) => (\n    <Wrapper type=\"button\" onClick={callback}>\n        {text}\n    </Wrapper>\n);\n\nButton.propTypes = {\n    text: PropTypes.string,\n    callback: PropTypes.func\n};\n\nexport default Button;","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState = stateName => {\n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionState && JSON.parse(sessionState);\n};\n","import {useState, useEffect, useRef} from 'react';\n//API\nimport API from '../API';\n//helpers\nimport {isPersistedState} from '../helpers'\nconst initialState = {\n    page: 0,\n    results: [],\n    total_pages: 0,\n    total_results: 0\n};\n\nexport const useHomeFetch = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [state, setState] = useState();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\n\n    const fetchMovies = async (page, searchTerm = \"\")  =>{\n        try {\n            setError(false);\n            setLoading(true);\n\n            const movies = await API.fetchMovies(searchTerm, page);\n            \n\n            setState(prev => ({\n                ...movies,\n                results:\n                    page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n            }));\n        } catch (error) {\n            setError(true);\n        }\n        setLoading(false);\n    };\n\n    // Initial and Search\n    \n    useEffect(() =>{ \n        if(!searchTerm){\n            const sessionState = isPersistedState('homeState');\n\n            if (sessionState) {\n                console.log('Grabbing from sessionStorage');\n                setState(sessionState);\n                return;\n            }\n        }\n        console.log('Grabbing from API')\n        setState(initialState);\n        fetchMovies(1,searchTerm);\n    }, [searchTerm]);\n\n    //Load More\n    useEffect(() =>{\n        if(!isLoadingMore) return;\n\n        fetchMovies(state.page + 1, searchTerm);\n        setIsLoadingMore(false);\n\n    },[isLoadingMore, searchTerm, state?.page]);\n\n    //Write to sessionStorage\n    useEffect(() => {\n        if (!searchTerm) sessionStorage.setItem('homeState', JSON.stringify(state))\n    }, [searchTerm, state]);\n\n  return {state, loading, error,searchTerm, setSearchTerm, setIsLoadingMore};  \n};","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from \"react\";\n//Config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\n\n// Components\nimport HeroImage from \"./HeroImage\";\nimport Grid from \"./Grid\";\nimport Thumb from './Thumb';\nimport Spinner from './Spinner';\nimport SearchBar from './SearchBar';\nimport Button from \"./Button\";\n// Hook\nimport { useHomeFetch} from '../hooks/useHomeFetch';\n// Image\nimport NoImage from '../images/no_image.jpg';\n\nconst Home = () => {\n    const {state, \n        loading, \n        error, \n        searchTerm, \n        setSearchTerm,\n        setIsLoadingMore\n    } = useHomeFetch();\n    console.log(state);\n    \n    if(error) return <div>Something went wrong...</div>\n    return (\n        <>\n            {!searchTerm && state?.results[0] ? (\n            <HeroImage\n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n                title={state.results[0].original_title}\n                text={state.results[0].overview}\n                />\n             ) : null}\n             <SearchBar setSearchTerm={setSearchTerm}/>\n             <Grid header={searchTerm ? 'Search Result':'Popular Movies'}>\n                 {state?.results.map(movie => (\n                    <Thumb\n                        key={movie.id}\n                        clickable\n                        image={\n                            movie.poster_path\n                            ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                            : NoImage\n                        }\n                        movieId={movie.id}\n                    />\n                 ))}\n             </Grid>\n             {loading && <Spinner/>}\n             {state?.page < state?.total_pages && !loading && (\n                 <Button text='Load More' callback={() => setIsLoadingMore(true)} />\n             )}\n        </>\n    );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 70px;\n    background: var(--medGrey);\n    color: var(--white);\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    width: 100%;\n    max-width: var(--maxWidth);\n    padding: 0 20px;\n\n    span{\n        font-size: var(--fontMed);\n        color: var(--white);\n        padding-right: 10px;\n\n        @media screen and (max-width: 768px) {\n            font-size: var(--fontSmall);\n        }\n    }\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from 'react-router-dom';\n\n//Styles\nimport { Wrapper, Content} from './BreadCrumb.styles';\n\nconst BreadCrumb = ({movieTitle}) => (\n    <Wrapper>\n        <Content>\n            <Link to ='/'>\n                <span>Home</span>\n            </Link>\n            <span>|</span>\n            <span>{movieTitle}</span>\n        </Content>\n    </Wrapper>\n);\n\nBreadCrumb.propTypes = {\n    movieTitle: PropTypes.string,\n}\n\nexport default BreadCrumb;","import styled from 'styled-components';\nimport {IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const Wrapper = styled.div`\n    background: ${({backdrop}) => \n        backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : '#000'};\n    background-size: cover;\n    background-position: center;\n    padding: 40px 20px;\n    animation: animateMovieInfo 1s;\n\n    @keyframes {\n        from {\n            opacity: 0;\n        }\n        to {\n            opacity: 1;\n        }\n    }\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n    background: rgba(0, 0, 0, 0.7);\n    border-radius: 20px;\n    \n    @media screen and (max-width: 768px) {\n        display: block;\n        max-height: none;\n    }\n`;\n\nexport const Text = styled.div`\n    width: 100%;\n    padding: 20px 40px;\n    color: var(--white);\n    overflow: hidden;\n\n    .rating-directors{\n        display: flex;\n        justify-content: flex-start;\n    }\n\n    .score{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 35px;\n        height: 35px;\n        background: #fff;\n        color: #000;\n        font-weight: 800;\n        border-radius: 50%;\n        margin: 0;\n    }\n    .director{\n        margin: 0 0 0 40px;\n\n        p{\n            margin: 0;\n        }\n    }\n        h1{\n            @media screen and (max-width: 768px) {\n                font-size: var(--fontBig)\n            }\n        }\n    \n`;","import React from 'react';\nimport PropTypes from 'prop-types'\n//Components\nimport Thumb from '../Thumb';\n//Comfig\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\n//Image\nimport NoImage from '../../images/no_image.jpg';\n//styles\nimport { Wrapper, Content, Text} from './MovieInfo.styles'\n\nconst MovieInfo = ({movie}) => (\n    <Wrapper backdrop ={movie.backdrop_path}>\n        <Content>\n            <Thumb\n                image={\n                    movie.poster_path\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                    : NoImage\n                }\n                clickable={false}\n                alt='movie-thumb'\n            />\n            <Text>\n                <h1>{movie.title}</h1>\n                <h3>PLOT</h3>\n                <p>{movie.overview}</p>\n\n                <div className=\"rating-directors\">\n                    <div>\n                        <h3>RATINGS</h3>\n                        <div className=\"score\">{movie.vote_average}</div>\n                    </div>\n                    <div className=\"director\">\n                        <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n                        {movie.directors.map(director => (\n                            <p key={director.creadit_id}>{director.name}</p>\n                        ))}\n                    </div>\n                </div>\n            </Text>\n        </Content>\n    </Wrapper>\n)\n\nMovieInfo.propTypes = {\n    movie: PropTypes.object\n}\n\nexport default MovieInfo;","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    min-height: 100px;\n    background: var(--darkGrey);\n    padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    max-width: var(--maxWidth);\n    width: 100%;\n    margin: 0 auto;\n\n    .column{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: var(--medGrey);\n        border-radius: 20px;\n        margin: 0 20px;\n        flex: 1;\n\n        :first-child{\n            margin-left: 0;\n        }\n        :last-child{\n            margin-right: 0;\n        }\n    }\n\n    @media screen and (max-width:768px){\n        display: block;\n\n        .column{\n            margin: 20px 0;\n        }\n    }\n`;","import React from 'react';\nimport PropTypes from 'prop-types'\n//helpers\nimport { calcTime, convertMoney} from '../../helpers';\n//Styles\nimport { Wrapper, Content} from './MovieInfoBar.styles';\n\nconst MovieInfoBar = ({ time, budget, revenue}) => (\n    <Wrapper>\n        <Content>\n            <div className = \"column\">\n                <p>Running time: {calcTime(time)}</p>\n            </div>\n            <div className = \"column\">\n                <p>Budget: {convertMoney(budget)}</p>\n            </div>\n            <div className = \"column\">\n                <p>Revenue: {convertMoney(revenue)}</p>\n            </div>\n        </Content>\n    </Wrapper>\n);\n\nMovieInfoBar.propTypes = {\n    time: PropTypes.number,\n    budget: PropTypes.number,\n    revenue: PropTypes.number\n}\n\nexport default MovieInfoBar;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    color: var(--white);\n    background: var(--darkGrey);\n    border-radius: 20px;\n    padding: 5px;\n    text-align: center;\n\n    h3{\n        margin: 10px 0 0 0;\n    }\n    p{\n        margin: 5px 0;\n    }\n`;\n\nexport const Image = styled.img`\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n`;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n//styles\nimport { Wrapper, Image} from './Actor.styles';\n\nconst Actor = ({name, character, imageUrl}) =>(\n    <Wrapper>\n        <Image src={imageUrl} alt='actor-thumb'/>\n        <h3>{name}</h3>\n        <p>{character}</p>\n    </Wrapper>\n);\n\nActor.propTypes ={\n    name: Proptypes.string,\n    character: Proptypes.string,\n    imageUrl: Proptypes.string,\n}\n\n\nexport default Actor;","import React from \"react\";\nimport {useParams} from 'react-router-dom'\n//Config\nimport { IMAGE_BASE_URL, POSTER_SIZE} from '../config';\n//components\nimport BreadCrumb from './BreadCrumb'\nimport Grid from \"./Grid\";\nimport Spinner from \"./Spinner\";\nimport MovieInfo from './MovieInfo';\nimport MovieInfoBar from \"./MovieInfoBar\";\nimport Actor from \"./Actor\";\n//Hook\nimport { useMovieFetch} from '../hooks/useMovieFetch';\n//Image\nimport NoImage from '../images/no_image.jpg';\nconst Movie = () => {\n    const { movieId } = useParams();\n\n    const { state : movie, loading, error} =useMovieFetch(movieId);\n    if (loading) return <Spinner/>\n    if (error) return <div>Something went wrong...</div>\n\n\n    return (\n        <>\n            <BreadCrumb movieTitle={movie.original_title} />\n            <MovieInfo movie={movie} />\n            <MovieInfoBar\n                time={movie.runtime}\n                budget={movie.budget}\n                revenue={movie.revenue}\n            />\n            <Grid header='Actors'>\n                {movie.actors.map(actor => (\n                    <Actor\n                    key={actor.credit_id}\n                    name={actor.name}\n                    character={actor.character}\n                    imageUrl={\n                        actor.profile_path\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                        : NoImage\n                        }\n                    />\n                ))}\n            </Grid>\n        </>\n    )\n};\n\nexport default Movie;","import { useState, useEffect} from 'react';\nimport API from '../API';\n\n//Helpers\nimport { isPersistedState } from '../helpers';\n\nexport const useMovieFetch = movieId => {\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        const fetchMovie = async() => {\n            try{\n                setLoading(true);\n                setError(false);\n\n                const movie = await API.fetchMovie(movieId);\n                const credits = await API.fetchCredits(movieId);\n                //Get directors Only\n                const directors = credits.crew.filter(\n                    member => member.job === 'Director'\n                );\n                setState({\n                    ...movie,\n                    actors: credits.cast,\n                    directors\n                });\n\n                setLoading(false);\n            } catch (error) {\n                setError(true);\n            }\n        };\n        const sessionState = isPersistedState(movieId);\n\n        if (sessionState) {\n            setState(sessionState);\n            setLoading(false);\n            return;\n        }\n            fetchMovie();\n        }, [movieId]);\n\n        //Write to Session storage\n        useEffect(() => {\n            sessionStorage.setItem(movieId, JSON.stringify(state));\n        },[movieId, state])\n      \n    return { state, loading, error };\n};","import React from \"react\";\n\nconst NotFound = () => <div>Not Found</div>;\n\nexport default NotFound;   ","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n    :root{\n        --maxWidth: 1280px;\n        --white: #ffffff;\n        --lightGrey: #eeeeee;\n        --medGrey: #353535;\n        --darkGrey: #1c1c1c;\n        --fontSUperBig: 2.5rem;\n        --fontBig: 1.5rem;\n        --fontMed: 1.2rem;\n        --fontSmall: 1rem;\n    }\n    *{\n        box-sizing: border-box;\n        font-family: 'Abel', sans-serif;\n    }\n    body{\n        margin: 0;\n        padding: 0;\n        \n        h1{\n            font-size: 2rem;\n            font-weight: 600;\n            color: var(--white);\n        }\n\n        h3{\n            font-size: 1.1rem;\n            font-weight: 600;\n        }\n        p{\n            font-size: 1rem;\n            color: var(--white);\n        }\n\n    }\n\n`","import React from 'react';\n//Routing \nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom';\n//Component\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport NotFound from './components/NotFound';\n//Styles\nimport { GlobalStyle} from './GlobalStyle';\n\nconst App = () => (\n    <Router>\n      <Header/>\n      <Routes>\n        <Route path='/' element={<Home/>} />\n        <Route path='/:movieId' element={<Movie/>}/>\n        <Route path='/*' element={<NotFound/>}/>\n      </Routes>\n      <GlobalStyle/>\n    </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}